By: İlhami Cengiz  
Date: Oct 18-2023 
-- Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

-- This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

-- In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

-- For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
-- In this case, you may want to save it as a PDF to ensure your formatting remains intact for your reviewer.



-- Part 1: Yelp Dataset Profiling and Understanding

-- 1. Profile the data by finding the total number of records for each of the tables below:

-- i. Attribute table = 10000 rows
-- ii. Business table = 10000 rows
-- iii. Category table = 10000 rows
-- iv. Checkin table = 10000 rows
-- v. elite_years table = 10000rows
-- vi. friend table = 10000rows
-- vii. hours table = 10000rows
-- viii. photo table = 10000rows
-- ix. review table = 10000 rows
-- x. tip table = 10000 rows
-- xi. user table = 10000 rows

	SQL CODE
SELECT COUNT(*)
FROM table


-- 2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

-- i. Business = 10000 distinct records for primary key ‘id’ of Business table
-- ii. Hours = 1562 distinct records for foreign key ‘business_id’
-- iii. Category = 2643 distinct records for foreign key ‘business_id’
-- iv. Attribute = 1115 distinct records for foreign key ‘id’
-- v. Review = 10000 distinct records for primary key ‘id’, 9581 user_id foreign key, 8090 business_id foreign key
-- vi. Checkin = 493 distinct records for foreign key ‘buisness_id’
-- vii. Photo = 10000 distinct records for primary key ‘id’, 6493 buisness_id foreign key
-- viii. Tip = 537 distinct records for foreign key ‘user_id’, 3979 buisness_id foreign key
-- ix. User = 10000 distinct records for primary key ‘id’
-- x. Friend = 11 distinct records for foreign key ‘user_id’
-- xi. Elite_years = 2780 distinct records for foreign key ‘user id’

-- Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.

	SQL CODE
SELECT COUNT(DISTINCT Keys)
FROM table


-- 3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

-- 	Answer: NO


-- 	SQL code used to arrive at answer:

SELECT *

FROM user

WHERE
      id IS NULL OR
      name IS NULL OR
      review_count IS NULL OR
      yelping_since IS NULL OR
      useful IS NULL OR
      funny IS NULL OR
      cool IS NULL OR
      fans IS NULL OR
      average_stars IS NULL OR
      compliment_hot IS NULL OR
      compliment_more IS NULL OR
      compliment_profile IS NULL OR
      compliment_cute IS NULL OR
      compliment_list IS NULL OR
      compliment_note IS NULL OR
      compliment_plain IS NULL OR
      compliment_cool IS NULL OR
      compliment_funny IS NULL OR
      compliment_writer IS NULL OR
      compliment_photos IS NULL




-- 4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

-- 	i. Table: Review, Column: Stars

-- 		min:	1	max:	5	avg:	3.7082


-- 	ii. Table: Business, Column: Stars

-- 		min:	1	max:	5	avg:	3.6549


-- 	iii. Table: Tip, Column: Likes

-- 		min:	0	max:	2	avg: 0.0144


-- 	iv. Table: Checkin, Column: Count

-- 		min:	1	max:	53	avg:	1.9414


-- 	v. Table: User, Column: Review_count

-- 		min:	0	max:	2000	avg:	24.2995


		SQL CODE
SELECT MIN(Column),MAX(Column),AVG(Column)
FROM table

-- 5. List the cities with the most reviews in descending order:

-- 	SQL code used to arrive at answer:

SELECT
	city,
	SUM(review_count) AS reviews

FROM business

GROUP BY city
ORDER BY reviews DESC


	Copy and Paste the Result Below:
+-----------------+---------+
| city            | reviews |
+-----------------+---------+
| Las Vegas       |   82854 |
| Phoenix         |   34503 |
| Toronto         |   24113 |
| Scottsdale      |   20614 |
| Charlotte       |   12523 |
| Henderson       |   10871 |
| Tempe           |   10504 |
| Pittsburgh      |    9798 |
| Montréal        |    9448 |
| Chandler        |    8112 |
| Mesa            |    6875 |
| Gilbert         |    6380 |
| Cleveland       |    5593 |
| Madison         |    5265 |
| Glendale        |    4406 |
| Mississauga     |    3814 |
| Edinburgh       |    2792 |
| Peoria          |    2624 |
| North Las Vegas |    2438 |
| Markham         |    2352 |
| Champaign       |    2029 |
| Stuttgart       |    1849 |
| Surprise        |    1520 |
| Lakewood        |    1465 |
| Goodyear        |    1155 |
+-----------------+---------+
(Output limit exceeded, 25 of 362 total rows shown)


-- 6. Find the distribution of star ratings to the business in the following cities:

-- i. Avon

-- SQL code used to arrive at answer:

SELECT SUM(review_count) AS Numbers, stars
FROM business
WHERE city == "Avon"
GROUP BY stars

-- Copy and Paste the Resulting Table Below (2 columns – star rating and count):

+---------+-------+
| Numbers | stars |
+---------+-------+
|      10 |   1.5 |
|       6 |   2.5 |
|      88 |   3.5 |
|      21 |   4.0 |
|      31 |   4.5 |
|       3 |   5.0 |
+---------+-------+


-- ii. Beachwood

-- SQL code used to arrive at answer:

SELECT SUM(review_count) AS Numbers, stars
FROM business
WHERE city == "Beachwood"
GROUP BY stars

-- Copy and Paste the Resulting Table Below (2 columns – star rating and count):

+---------+-------+
| Numbers | stars |
+---------+-------+
|       8 |   2.0 |
|       3 |   2.5 |
|      11 |   3.0 |
|       6 |   3.5 |
|      69 |   4.0 |
|      17 |   4.5 |
|      23 |   5.0 |
+---------+-------+



-- 7. Find the top 3 users based on their total number of reviews:

-- 	SQL code used to arrive at answer:

SELECT
	name,
	review_count

FROM user

ORDER BY review_count DESC
LIMIT 3

--Copy and Paste the Result Below:

+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+

-- 8. Does posing more reviews correlate with more fans?

-- 	Please explain your findings and interpretation of the results:

-- As can be seen from the snippet of the review_count and fans table below, having a high review_count doesn’t have a correlation to more fans.  Amy, who has the most
fans, only has 609 reviews. Yuri has only 76 fans, but has the third most reviews. Some other factors should also be considered.
-- I used the following code to search for reviews and yelping_since for the top users.

SELECT 
    name, 
    review_count, 
    fans

FROM user 
ORDER BY review_count DESC

+-----------+--------------+------+
| name      | review_count | fans |
+-----------+--------------+------+
| Gerald    |         2000 |  253 |
| Sara      |         1629 |   50 |
| Yuri      |         1339 |   76 |
| .Hon      |         1246 |  101 |
| William   |         1215 |  126 |
| Harald    |         1153 |  311 |
| eric      |         1116 |   16 |
| Roanna    |         1039 |  104 |
| Mimi      |          968 |  497 |
| Christine |          930 |  173 |
| Ed        |          904 |   38 |
| Nicole    |          864 |   43 |
| Fran      |          862 |  124 |
| Mark      |          861 |  115 |
| Christina |          842 |   85 |
| Dominic   |          836 |   37 |
| Lissa     |          834 |  120 |
| Lisa      |          813 |  159 |
| Alison    |          775 |   61 |
| Sui       |          754 |   78 |
| Tim       |          702 |   35 |
| L         |          696 |   10 |
| Angela    |          694 |  101 |
| Crissy    |          676 |   25 |
| Lyn       |          675 |   45 |
+-----------+--------------+------+
(Output limit exceeded, 25 of 10000 total rows shown)


-- 9. Are there more reviews with the word "love" or with the word "hate" in them?

-- 	Answer: Yes. Love is contained in 1780 reviews while Hate is contained in only 232 reviews.


-- 	SQL code used to arrive at answer:

-- Count the number of reviews containing the word "love"
SELECT COUNT(*) AS love_reviews_count
FROM Review
WHERE LOWER(text) LIKE '%love%';

-- Count the number of reviews containing the word "hate"
SELECT COUNT(*) AS hate_reviews_count
FROM Review
WHERE LOWER(text) LIKE '%hate%';


-- 10. Find the top 10 users with the most fans:

-- 	SQL code used to arrive at answer:

SELECT
	user.id,
	name,
	fans

FROM user

ORDER BY fans DESC
LIMIT 10



	Copy and Paste the Result Below:
+------------------------+-----------+------+
| id                     | name      | fans |
+------------------------+-----------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |  497 |
| --2vR0DIsmQ6WfcSzKWigw | Harald    |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |  120 |
+------------------------+-----------+------+



-- Part 2: Inferences and Analysis

-- 1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.


-- I have chosen city as Las Vegas as it had 82854 reviews and subsequently chose Shopping as there were 4 businesses which was the highest among all the categories along with Health & Medical and Restaurants.


-- i. Do the two groups you chose to analyze have a different distribution of hours?

-- Yes. The businesses with 4-5 stars have a higher average number of hours than the businesses with 2-3 stars.


-- ii. Do the two groups you chose to analyze have a different number of reviews?

-- Comparing the reviews of the businesses, Walgreens has just 6 reviews whereas the 4-5-star businesses have 4 and 32 reviews respectively. It seems the one with 32 reviews i.e. Red Rock Canyon Visitor Centre is quite liked by the residents with 4.5-star rating.


-- iii. Are you able to infer anything from the location data provided between these two groups? Explain.

-- The location and neighborhood don’t provide sufficient details to reach any major conclusion. It is difficult to say for sure, but it is possible that the businesses with 4-5 stars are located in more desirable areas, which could lead to more traffic and more reviews.



-- SQL code used for analysis:

SELECT
       CASE
       WHEN stars>=4 THEN '4-5 Stars'
       WHEN (stars>=2 AND stars<=3) THEN '2-3 Stars'
       END as rating,

       postal_code,
       review_count,
       hours.hours,
       name,
       neighborhood


FROM business INNER JOIN category
     ON business.id=category.business_id

     INNER JOIN hours
     ON business.id=hours.business_id

WHERE city='Toronto'
      AND category = 'food'
      AND (stars>=4 OR (stars <3 and stars>2))

ORDER BY stars DESC, hours DESC

+-----------+-------------+--------------+-----------------------+--------------+-----------------+
| rating    | postal_code | review_count | hours                 | name         | neighborhood    |
+-----------+-------------+--------------+-----------------------+--------------+-----------------+
| 4-5 Stars | M6P 1A6     |           26 | Wednesday|18:00-2:00  | Cabin Fever  | High Park       |
| 4-5 Stars | M6P 1A6     |           26 | Tuesday|18:00-2:00    | Cabin Fever  | High Park       |
| 4-5 Stars | M6P 1A6     |           26 | Thursday|18:00-2:00   | Cabin Fever  | High Park       |
| 4-5 Stars | M6P 1A6     |           26 | Sunday|16:00-2:00     | Cabin Fever  | High Park       |
| 4-5 Stars | M6P 1A6     |           26 | Saturday|16:00-2:00   | Cabin Fever  | High Park       |
| 4-5 Stars | M6P 1A6     |           26 | Monday|16:00-2:00     | Cabin Fever  | High Park       |
| 4-5 Stars | M6P 1A6     |           26 | Friday|18:00-2:00     | Cabin Fever  | High Park       |
| 4-5 Stars | M6H 1V5     |           15 | Wednesday|15:00-21:00 | Halo Brewery | Wallace Emerson |
| 4-5 Stars | M6H 1V5     |           15 | Tuesday|15:00-21:00   | Halo Brewery | Wallace Emerson |
| 4-5 Stars | M6H 1V5     |           15 | Thursday|15:00-21:00  | Halo Brewery | Wallace Emerson |
| 4-5 Stars | M6H 1V5     |           15 | Sunday|11:00-21:00    | Halo Brewery | Wallace Emerson |
| 4-5 Stars | M6H 1V5     |           15 | Saturday|11:00-21:00  | Halo Brewery | Wallace Emerson |
| 4-5 Stars | M6H 1V5     |           15 | Friday|15:00-21:00    | Halo Brewery | Wallace Emerson |
| 2-3 Stars | M6R 1X3     |           10 | Wednesday|8:00-22:00  | Loblaws      | Roncesvalles    |
| 2-3 Stars | M6R 1X3     |           10 | Tuesday|8:00-22:00    | Loblaws      | Roncesvalles    |
| 2-3 Stars | M6R 1X3     |           10 | Thursday|8:00-22:00   | Loblaws      | Roncesvalles    |
| 2-3 Stars | M6R 1X3     |           10 | Sunday|8:00-22:00     | Loblaws      | Roncesvalles    |
| 2-3 Stars | M6R 1X3     |           10 | Saturday|8:00-22:00   | Loblaws      | Roncesvalles    |
| 2-3 Stars | M6R 1X3     |           10 | Monday|8:00-22:00     | Loblaws      | Roncesvalles    |
| 2-3 Stars | M6R 1X3     |           10 | Friday|8:00-22:00     | Loblaws      | Roncesvalles    |
+-----------+-------------+--------------+-----------------------+--------------+-----------------+

-- 2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.

-- i. Difference 1:
--          The ones that are still open have more reviews on average than ones that are closed.

-- 			Open:   AVG(review_count) = 31.757
-- 			Closed: AVG(review_count) = 23.198

-- ii. Difference 2:
--         Businesses that are still open are more likely to have a good reputation. The average star rating is higher for businesses that are open than businesses that are closed.

-- 			Open:   AVG(stars) = 3.68
-- 			Closed: AVG(stars) = 3.52


-- SQL code used for analysis:
SELECT

	COUNT(DISTINCT(id)) AS Number_of_business,
	ROUND(AVG(review_count),2) AS avg_review,
	SUM(review_count) AS total_review,
	ROUND(AVG(stars),2) AS avg_rating,
	is_open

FROM business
GROUP BY is_open

+--------------------+------------+--------------+------------+---------+
| Number_of_business | avg_review | total_review | avg_rating | is_open |
+--------------------+------------+--------------+------------+---------+
|               1520 |       23.2 |        35261 |       3.52 |       0 |
|               8480 |      31.76 |       269300 |       3.68 |       1 |
+--------------------+------------+--------------+------------+---------+

-- 3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

-- Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:


-- i. Type of Analysis: Preference of Different Types of Food on Yelp

-- I have opted to delve into the realm of understanding food preferences on Yelp. Specifically, I am interested in discerning the patterns and trends associated with various types of cuisines, seeking insights into what types of food are more favored among Yelp users.


-- ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

-- For this exploration, I'll be requiring data on star ratings and review counts for Chinese, Mexican, Korean, French, Italian, Japanese, and Indian restaurants on Yelp. This dataset will be instrumental in unveiling the culinary preferences of Yelp users, shedding light on which types of cuisine garner the highest favorability and engagement. By focusing on user sentiment and interaction metrics like the number of reviews, I aim to pinpoint the culinary categories that stand out as particularly popular within the vibrant Yelp community.

Specifically, I will need the following data for each restaurant:

Food type: The type of food that the restaurant serves, such as Chinese, Mexican, Korean, French, Italian, Japanese, or Indian.
Star rating: The average star rating that the restaurant has received from Yelp users.
Number of reviews: The total number of reviews that the restaurant has received on Yelp.
I chose this data because it is directly relevant to my research question: which types of food are popular on Yelp? The star rating and number of reviews are both indicators of user sentiment and engagement, and they can be used to measure the popularity of different types of food on Yelp.

For example, if I find that Chinese restaurants have a higher average star rating and more reviews than other types of restaurants, then I can conclude that Chinese food is more popular on Yelp. Similarly, if I find that Mexican restaurants have a higher number of reviews than other types of restaurants, but a lower average star rating, then I can conclude that Mexican food is more popular on Yelp, but users are less satisfied with it overall.

-- iii. Output of your finished dataset:

+----------+-----------------------+-----------+------------------+-----------------+
| category | Number_Of_Restaurants | Avg_Stars | Avg_Review_Count | city            |
+----------+-----------------------+-----------+------------------+-----------------+
| Korean   |                     7 |       4.5 |              8.0 | Toronto         |
| Chinese  |                     7 |       4.0 |            768.0 | Las Vegas       |
| French   |                     7 |       4.0 |            168.0 | Las Vegas       |
| French   |                     5 |       4.0 |             89.0 | Toronto         |
| Italian  |                     7 |       4.0 |            129.0 | Mesa            |
| Japanese |                     6 |       4.0 |             61.0 | Mississauga     |
| Mexican  |                     7 |       4.0 |             37.0 | Edinburgh       |
| Mexican  |                     7 |       4.0 |             69.0 | Mississauga     |
| Chinese  |                     6 |       3.5 |             21.0 | Fountain Hills  |
| Indian   |                     6 |       3.5 |             32.0 | Aurora          |
| Mexican  |                     7 |       3.5 |             83.0 | Litchfield Park |
| Japanese |                    14 |      3.25 |              6.5 | Toronto         |
| Italian  |                     6 |       3.0 |             19.0 | Montréal        |
| Mexican  |                     7 |       3.0 |            103.0 | Pittsburgh      |
+----------+-----------------------+-----------+------------------+-----------------+

-- iv. Provide the SQL code you used to create your final dataset:

SELECT
    c.category,
    COUNT(b.name) AS Number_Of_Restaurants,
    AVG(b.stars) AS Avg_Stars,
    AVG(b.review_count) AS Avg_Review_Count,
    b.city
FROM
    business b
INNER JOIN
    hours h ON b.id = h.business_id
INNER JOIN
    category c ON c.business_id = b.id
WHERE
    c.category IN ('Chinese', 'Mexican', 'French', 'Italian', 'Korean', 'Japanese', 'Indian')
GROUP BY
    c.category, b.city
ORDER BY
    Avg_Stars DESC;
